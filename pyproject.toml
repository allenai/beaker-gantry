[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "beaker-gantry"
dynamic = ["version"]
readme = "README.md"
description = "Gantry streamlines running Python experiments in Beaker by managing containers and boilerplate for you"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
authors = [
    { name = "Allen Institute for Artificial Intelligence", email = "contact@allenai.org" },
    { name = "Pete Walsh", email = "petew@allenai.org" },
]
license = {file = "LICENSE"}
requires-python = ">3.7"
dependencies = [
    "beaker-py>=1.14.0,<2.0",
    "GitPython>=3.0,<4.0",
    "rich",
    "click",
    "click-help-colors",
    "petname>=2.6,<3.0",
    "requests",
    "packaging",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy>=1.0,<1.5",
    "types-requests",
    "black>=23.0,<24.0",
    "isort>=5.11,<5.13",
    "pytest",
    "twine>=1.11.0",
    "build",
    "setuptools",
    "wheel",
    "packaging",
]

[project.scripts]
gantry = "gantry.__main__:main"

[project.urls]
homepage = "https://github.com/allenai/beaker-gantry"
repository = "https://github.com/allenai/beaker-gantry"

[tool.setuptools.packages.find]
exclude = [
    "*.tests",
    "*.tests.*",
    "tests.*",
    "tests",
    "test_fixtures",
    "test_fixtures.*",
    "scripts*",
    "examples*"
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
gantry = ["py.typed", "entrypoint.sh"]

[tool.setuptools.dynamic]
version = {attr = "gantry.version.VERSION"}

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
(
      __pycache__
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vscode
    | \.venv
    | \bdist\b
    | \bdoc\b
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.ruff]
line-length = 115
ignore = ["F403", "F405"]

[tool.mypy]
ignore_missing_imports = true
no_site_packages = false
allow_redefinition = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
strict_optional = false

[tool.pytest.ini_options]
testpaths = [
    "tests/",
]
python_classes = [
    "Test*",
    "*Test",
]
log_format = "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
log_level = "DEBUG"
markers = []
filterwarnings = []
